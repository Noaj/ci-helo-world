# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

defaults: &defaults
  docker:
    - image: python:3.7-alpine3.11
    # - image: amazon/aws-cli

commands:
  destroy_environment:
    description: Destroy destroy environment if something went wrong
    parameters:
         to:
           default: "world"
           type: string
    steps:
      - run:
          name: Destrying environment
          command: |
            echo "Hello <<parameters.to>>"
            
#aws cloudformation delete-stack --stack-name udacity-${CIRCLE_WORKFLOW_ID}              

jobs:
  # create_infrastructure:
  #   docker:
  #     - image: amazon/aws-cli
  #   working_directory: hello-world-stack
  #   steps:
  #     - checkout
  #     - run:
  #         name: print current dir
  #         command: ls hello-world-stack
  #     - run:
  #         name: Create infastructure stack
  #         command: |
  #           hello-world-stack/create.sh udacity-${CIRCLE_WORKFLOW_ID} \
  #           hello-world-stack/create-ec2.yaml \
  #           hello-world-stack/create-ec2-parameters.json

  # configure_infrastructure:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: ["aa:ba:25:18:db:4f:52:b8:c8:79:42:70:60:74:4a:29"]
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           apk add --update ansible
  #     - run:
  #         name: Install aws-cli
  #         command: pip install awscli      
  #     - run:
  #         name: Check for aws version
  #         command: aws --version
  #     - run:
  #         name: print s3 buckets
  #         command: aws s3 ls    
  #     # I nned to fix this :|    
  #     # - run:
  #     #     name: Configure Server
  #     #     command: |
  #     #       ansible-playbook -i hello-world-playbook/inventory.txt hello-world-playbook/playbook.yml

  smoke_test:
    docker:
        - image: alpine:latest
    steps:
      - checkout
      # - run:
      #     name: Add curl
      #     command: |
      #       apk add --update curl
      - run:
          name: Smoke test the site - its reachable
          command: return 1
      - run:
          command: echo error
          when: on_fail

            
             
# Orchestrate or schedule a set of jobs
workflows:
  default:
    jobs:
      - smoke_test
      # - create_infrastructure
      # - configure_infrastructure:
      #     requires: [create_infrastructure]
      # - smoke_test:
      #     requires: [configure_infrastructure]

      # - create_infrastructure
      # - job_to_fail
      # - print_workflow_id
      # - save_hello_world_output
      # - print_output_file:
      #     requires: [save_hello_world_output]

